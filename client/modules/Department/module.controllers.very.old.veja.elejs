'use strict';

<<<<<<< HEAD
(function () {
	// const HASH = location.hash.replace('#!/', '')
	// const MODULE_NAME = HASH[0].toUpperCase() + HASH.slice(1) 
	const MODULE_NAME = 'Device'
	const MODULES_PATH = 'modules'
	const PATH = `/` + MODULE_NAME.toLowerCase()
	const actions = [
		`ModuleList`,
		`ModuleGetCtrl`,
		`ModuleEditCtrl`,
		`ModuleCreateCtrl`,
	]

	console.log('MODULE_NAME', MODULE_NAME)
	const routes = [
		{	
			path: PATH,
			templateUrl: `${MODULES_PATH}/${MODULE_NAME}/data.html`,
			action: `ModuleList`,
		},
		{	
			path: PATH + `/create`,
			templateUrl: `${MODULES_PATH}/${MODULE_NAME}/form.html`,
			action: `ModuleCreateCtrl`,
		},
		{	
			path: PATH + `/:id`,
			templateUrl: `${MODULES_PATH}/${MODULE_NAME}/data.html`,
			action: `ModuleGetCtrl`,
		},
		{	
			path: PATH + `/:id/edit`,
			templateUrl: `${MODULES_PATH}/${MODULE_NAME}/form.html`,
			action: `ModuleEditCtrl`,
		}
	]

	const MODULE = {
		name: MODULE_NAME,
		service: ModuleService,
		ModuleList,
		ModuleGetCtrl,
		ModuleEditCtrl,
		ModuleCreateCtrl,
	}

	const thisModule = angular.module(`sisApp.${MODULE_NAME}Controllers`, ['ngRoute'])

	thisModule
		.service(`ModuleService`, MODULE.service)

	for (const action in actions) {
		if (actions[action]) 
			thisModule.controller(`${actions[action]}`, MODULE[`${actions[action]}`])
	}

	function ModuleList($scope, ModuleService) {

		var vm = this;

		$scope.list = true

		function success (list) {
			console.log(list)
			$scope.users = list.data;
		}
		function error (err) {
			console.log('Erro: ', err);
		}

		ModuleService
			.list()
=======
(function() {
	const MODULE_NAME = `Device`
	console.log(`MODULE_NAME`, MODULE_NAME)
	angular.module(`sisApp.${MODULE_NAME}.Controllers`, [
		`ngRoute`,
		`sisApp.${MODULE_NAME}.Service`
	])

		.controller(`${MODULE_NAME}ListController`, ListController)
		.controller(`${MODULE_NAME}GetController`, GetController)
		.controller(`${MODULE_NAME}CreateController`, CreateController)
		.controller(`${MODULE_NAME}UpdateController`, UpdateController);


	function ListController($scope, DeviceService) {
		console.log(`DeviceController list`)
		var vm = this;

		$scope.list = true
		DeviceService
			.list()
			.then(function (list) {
				console.log(list)
				$scope.devices = list.data;

			})
			.catch(function (err) {
				console.log(`Erro: `, err);
			})
	}

	function GetController($scope, DeviceService, $routeParams) {

		var vm = this;
		var produtos = [];

		$scope.list = false

		const success = (updated) => {
			console.log(caught)
			$scope.user = caught.data;
		}
		const error = (err) => {
			console.log(`Erro: `, err);
		}

		DeviceService
			.get($routeParams.id)
>>>>>>> feature-modularizacao-inicio
			.then(success)
			.catch(error)
	}

<<<<<<< HEAD

	function ModuleCreateCtrl($scope, ModuleService, $routeParams) {
=======
	function CreateController($scope, DeviceService) {
>>>>>>> feature-modularizacao-inicio

		var vm = this;

		$scope.title = "Cadastrar"
		$scope.actionButton = "cadastrar" //pq o title sera diferente se nao soh usar lowerCase 

<<<<<<< HEAD
		function success (user) {
			console.log('VOLTOU: ', user)
			$scope.message = user.data;
		}

		function error (err) {
			console.log('Erro: ', err);
		}

		$scope.action = (Form) => 
			ModuleService
				.create(Form)
				.then(success)
				.catch(error)
	}

	function ModuleEditCtrl($scope, ModuleService, $routeParams) {

		var vm = this;
		const edit = !!($routeParams.id)
=======
		const success = (updated) => {
			console.log(`VOLTOU: `, create)
			$scope.message = create.data;
		}
		const error = (err) => {
			console.log(`Erro: `, err);
		}

		$scope.action = (Form) => 
			DeviceService
				.create(Form)
				.then(success)
				.catch(error)

		
	}

	function UpdateController($scope, DeviceService, $routeParams) {

		var vm = this;
>>>>>>> feature-modularizacao-inicio

		$scope.title = "Editar"
		$scope.actionButton = "editar"

<<<<<<< HEAD
		function success (list) {
			console.log(list)
			$scope.Form = list.data;
		}

		function error (err) {
			console.log('Erro: ', err);
		}

		ModuleService
			.get($routeParams.id)
			.then(success)
			.catch(error)

		$scope.action = function (Form) {
			function success (user) {
				console.log('VOLTOU: ', user)
				$scope.message = user.data;
			}
			ModuleService
				.update(Form)
				.then(success)
				.catch(error)
		}
	}

	function ModuleGetCtrl($scope, ModuleService, $routeParams) {

		var vm = this;
		var produtos = [];

		$scope.list = false

		function success (list) {
			console.log(list)
			$scope.users = list.data;
		}
		function error (err) {
			console.log('Erro: ', err);
		}

		ModuleService
			.get($routeParams.id)
			.then(success)
			.catch(error)
	}

	function ModuleService($http) {
		const API = 'api/' + MODULE_NAME.toLowerCase() + 's'
		const BASE_URL = `http://localhost:8000/${API}/`; // API
		
		this.list = function () {
			const request = {
				url: BASE_URL,
				method: 'GET'
			}
			return $http(request);
		}

		this.get = function (id) {
			const request = {
				url: BASE_URL + id,
				method: 'GET'
			}
			return $http(request);
		}

		this.create = function (Form) {
			const request = {
				url: BASE_URL,
				method: 'POST',
				data: Form
			}
			return $http(request);
		}

		this.update = function (Form) {
			const request = {
				url: BASE_URL + Form._id,
				method: 'PUT',
				data: Form
			}
			return $http(request);
		}

		this.remove = function (user) {
			const request = {
				url: BASE_URL + user._id,
				method: 'DELETE'
			}
			return $http(request);
		}
	}

	ModuleList.$inject = ['$scope', 'ModuleService'];
	ModuleGetCtrl.$inject = ['$scope', 'ModuleService', '$routeParams'];
	ModuleCreateCtrl.$inject = ['$scope', 'ModuleService', '$routeParams'];
	ModuleEditCtrl.$inject = ['$scope', 'ModuleService', '$routeParams'];
	ModuleService.$inject = ['$http'];
})()

'use strict';

=======
			const success = (updated) => {
				console.log(updated)
				$scope.Form = updated.data;
			}
			const error = (err) => {
				console.log(`Erro: `, err);
			}

			DeviceService
				.get($routeParams.id)
				.then(success)
				.catch(error)

			$scope.action = (Form) => 
				DeviceService
					.update(Form)
					.then(function (user) {
						console.log(`VOLTOU: `, user)
						$scope.message = user.data;
					})
					.catch(error)

	}
	ListController.$inject = [`$scope`, `DeviceService`];
	CreateController.$inject = [`$scope`, `DeviceService`];
	GetController.$inject = [`$scope`, `DeviceService`, `$routeParams`];
	UpdateController.$inject = [`$scope`, `DeviceService`, `$routeParams`];
	
})()
>>>>>>> feature-modularizacao-inicio
